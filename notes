check max_endstop config

Motor 3 --> enabled, gpio 8, min_endstop disabled
Motor 2 --> disabled, gpio 0, min_endstop disabled --> fixed
Motor 1 --> disabled, gpio 0, min_endstop disabled --> fixed 

error:

odrive0 was uncomnfigured!!!

convention:
limit axis 0 -- gpio 2
limit axis 1 -- gpio 8

Superstition:
it is recommended to wait 10 seconds before rebooting odrive after saving configuration
and waiting 5 seconds after to reconnect

gpio 13, 16, 20 on RPI for limit switches


switch to shorter cables

disable endstops on odrive, increase current limit

encoder mounting plate is extremely loose on motor 1. probably why it lost its index position.

position controll works on motor 2 and 3. need to find index before position control works


working settings: 
need to increase current to support weight of arm assembly
current_lim = 40
requested_current_range = 60
calibration_current = 25

if swingd back fast, change motor direction, possibly just reboot and try again.

homing function

switches need debounce? Arms are not rising to switches before it is triggered -- Done




add negative velocity control to RPiOdrive lib. -- its there but I cannot get it to work rn


ODRive gpio are 3.3v but 5v compliant. Encoders being powered off 5v can be a problem.

got all three motors homed with limit switch. after third homes, motors 1 and 2 give out. probasbly a current control problem

TODO:
fix current control problem + tune pos_gain to remove vibrations


TODO:
create README documentation with ODrive info, commands and usage, etc
create config file of current ODrive config for future reference
setup pycharm with RPI - remote deployment
setup slack channel
(me) -- find new tablet or something to work with - stop using blake's tablet
note: since using rpi for stop switches, do not need new firmware
figure out how to use endstops with ODrive
figure out how to set a negative velocity

put ODrives on top of project
put power supply inside base of project
cable management

tighten all loose bolts
install missing bolts in arm
finalize mechanical
create HAT for RPi if limit switches + ODrive dont work
finalize electrical

finish homing function
test setting three positions at once, one per motor
tune current settings
tune proportional control values -- stop wobble and get faster response
lots of testing

implement kinematics and verfy working with joystick control test program
modularize code and create delta-arm class/API
DONE HARDWARE PROGRAMING

install UI on RPi and test displays
install hardware backend delta-arm API into UI front end code
lots of testing and iterative modifications


figure out why motors fail!
axis error 0x40
motor error 0x1
its doing the thing where it goes up then slams back down again.



motor encoder cables were loose and one was detached. Creating more permant encoder cable solution.
Using two different versions of ODrive board. Motor 1 and 2 are connected to an odrive V 3.5 and motor 3 is connected to an odrive v 3.6 --> might be a cause of some problems.

odrive v3.3 and onwards have 5v tolerant pins. should we power encoders from 3.3v? maybe continue using 5v to account for any voltage drop in cables. 
odrive v3.5 and onwards have noise suppression filters on the default step/dir pins. --> filter might cause a problem with something.
*** for predictable results only have one feature enabled per any one pin *** --> double check this with the encoder and limit switch pins.
see odrive --> interfaces documentation for more information

redoing motor calibration per Blake's request.
will then double check index posiion when new encoder cables are ready.
will then make sure that the arms are securely screwed in with all the skrew holes used (all four with the right skrew sizes and threads. not this mix mash thats been going on)

Only 2 and either 8 OR 9 -- figure out if it is 8 or 9 that works -- with GPIO/limit switches

Odrive 3.5 and 3.6 run the same firmware, no significant differences
